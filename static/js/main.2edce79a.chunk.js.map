{"version":3,"sources":["logo.svg","components/UI/Card.jsx","components/Expenses/TableHeader.jsx","components/Expenses/ExpenseFilter.jsx","components/Expenses/ExpenseDate.jsx","components/Expenses/ExpenseItem.jsx","components/Expenses/ExpensesList.jsx","components/Chart/ChartBar.jsx","components/Chart/Chart.jsx","components/Expenses/ExpenseChart.jsx","components/Expenses/Expenses.jsx","components/NewExpense/ExpenseForm.jsx","components/NewExpense/NewExpense.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","classes","className","children","TableTitle","ExpensesFilter","value","selected","onChange","event","onFilterChange","target","ExpenseDate","month","date","toLocaleString","day","getDate","year","getFullYear","Expenseitem","title","expense","ExpensesList","items","length","map","amount","id","ChartBar","BarFillHeight","maxValue","Math","round","console","log","style","height","label","Chart","dataPointValues","dataPoints","dataPoint","totalMax","max","ExpenseChart","chartDataPoints","expenses","getMonth","Expenses","useState","filteredYear","setFilteredYear","filteredExpenses","filter","toString","selectedYear","ExpenseForm","Title","setTitle","Amount","setAmount","Date","setDate","onSubmit","preventDefault","expenseData","window","onSubmitExpenseData","type","min","step","onClick","onCancel","NewExpense","isEditing","setEditing","enteredExpenseData","ExpenseData","floor","random","onAddExpense","existingExpenses","App","setExpenses","src","logo","alt","newExpenseData","prevExpenses","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2edce79a.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import \"./Card.css\";\r\nfunction Card(props) {\r\n    const classes=\"cards \" + props.className;\r\n    return (\r\n        <div className={classes}>{props.children}</div>\r\n    )\r\n}\r\nexport default Card;","import Card from \"../UI/Card\";\r\n\r\nfunction TableTitle() {\r\n    return (\r\n        <Card className=\"row header\">\r\n          <div className=\"col-2\">\r\n            <h5>Date</h5>\r\n          </div>\r\n          <div className=\"col-8\">\r\n            <h5>Title</h5>\r\n          </div>\r\n          <div className=\"col-2\">\r\n            <h5>Expense</h5>\r\n          </div>\r\n        </Card>\r\n    );\r\n}\r\n\r\nexport default TableTitle;","import './ExpenseFilter.css';\r\n\r\nconst ExpensesFilter = (props) => {\r\n    function filterHandler(event){\r\n        props.onFilterChange(event.target.value);\r\n    }\r\n  return (\r\n    <div className='expenses-filter'>\r\n      <div className='expenses-filter__control'>\r\n        <label>Filter by year</label>\r\n        <select value={props.selected} onChange={filterHandler}>\r\n          <option value='2022'>2022</option>\r\n          <option value='2021'>2021</option>\r\n          <option value='2020'>2020</option>\r\n          <option value='2019'>2019</option>\r\n        </select>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExpensesFilter;","function ExpenseDate(props) {\r\n    const month=props.date.toLocaleString('default', { month: 'long' });\r\n    const day=props.date.getDate();    \r\n    const year=props.date.getFullYear();\r\n\r\n    return(\r\n        <div className=\"col-2 date expense-date\">\r\n            <div className=\"expense-date__month\">{month}</div>\r\n            <div className=\"expense-date__year\">{year}</div>\r\n            <h5 className=\"expense-date__day\">{day}</h5>\r\n          </div>\r\n    )\r\n    \r\n}\r\nexport default ExpenseDate;","import ExpenseDate from \"./ExpenseDate\";\r\nimport Card from \"../UI/Card\";\r\nfunction Expenseitem(props) {\r\n    return(\r\n        <Card className=\"row items\">\r\n          <ExpenseDate date={props.date} />\r\n          <div className=\"col-8 title\">\r\n            <h5>{props.title}</h5>\r\n          </div>\r\n          <div className=\"col-2 expense-item__price\">\r\n            <h5>${props.expense}</h5>\r\n          </div>\r\n        </Card>\r\n    );\r\n}\r\n\r\nexport default Expenseitem;","import Expenseitem from \"./ExpenseItem\";\r\n\r\nfunction ExpensesList(props) {\r\n    if (props.items.length === 0){\r\n        return <p>No items Found!</p>;\r\n    }    \r\n    return (\r\n        props.items.map( expense =>(\r\n            <Expenseitem \r\n            key={expense.id}\r\n            title={expense.title}\r\n            date={expense.date}\r\n            expense={expense.amount}\r\n        />\r\n        ))\r\n        \r\n    )\r\n}\r\n\r\nexport default ExpensesList;","import './Chart.css';\r\n\r\nfunction ChartBar(props) {\r\n    let BarFillHeight = '0%';\r\n    if(props.maxValue > 0){\r\n        BarFillHeight = Math.round((props.value/props.maxValue) *100) + '%';\r\n        console.log(BarFillHeight);\r\n    }\r\n    return(\r\n        <div className=\"chart-bar\">\r\n            <div className=\"chart-bar__inner\">\r\n                <div className=\"chart-bar__fill\" style={{height: BarFillHeight}}></div>\r\n            </div>\r\n            <div className=\"chart-bar__label\">{props.label}</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ChartBar;","import './Chart.css';\r\nimport ChartBar from './ChartBar';\r\n\r\nfunction Chart(props) {\r\n    const dataPointValues= props.dataPoints.map(dataPoint => dataPoint.value);\r\n    const totalMax = Math.max(...dataPointValues);\r\n    return (\r\n        <div className=\"chart\">\r\n            {props.dataPoints.map(dataPoint => (\r\n                <ChartBar \r\n                  key={dataPoint.label}\r\n                  value={dataPoint.value}\r\n                  maxValue={totalMax}\r\n                  label={dataPoint.label}\r\n                />\r\n            ))}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Chart;","import Chart from \"../Chart/Chart\"\r\n\r\nfunction ExpenseChart(props) {\r\n    let chartDataPoints = [\r\n        {label: 'Jan', value:0},\r\n        {label: 'Feb', value:0},\r\n        {label: 'Mar', value:0},\r\n        {label: 'Apr', value:0},\r\n        {label: 'May', value:0},\r\n        {label: 'Jun', value:0},\r\n        {label: 'Jul', value:0},\r\n        {label: 'Aug', value:0},\r\n        {label: 'Sept', value:0},\r\n        {label: 'Oct', value:0},\r\n        {label: 'Nov', value:0},\r\n        {label: 'Dec', value:0}\r\n    ]\r\n\r\n    for( const expense of props.expenses){\r\n        const expenseMonth = expense.date.getMonth();\r\n        chartDataPoints[expenseMonth].value += expense.amount;\r\n    }\r\n\r\n    return (\r\n        <Chart dataPoints = {chartDataPoints} />\r\n    )\r\n}\r\n\r\nexport default ExpenseChart;","import \"../../App.css\";\r\nimport Card from \"../UI/Card\";\r\nimport ExpensesFilter from \"./ExpenseFilter\";\r\nimport { useState } from \"react\";\r\nimport ExpensesList from \"./ExpensesList\";\r\nimport ExpenseChart from \"./ExpenseChart\";\r\n\r\nfunction Expenses(props) {\r\n\r\n    const [filteredYear, setFilteredYear] = useState('2020');\r\n    function FilterChangeHandler(selectedYear){\r\n        setFilteredYear(selectedYear);\r\n    }\r\n    const filteredExpenses = props.items.filter ( expense => {\r\n        return expense.date.getFullYear().toString() === filteredYear;\r\n    })\r\n\r\n    return(\r\n        <Card className=\"expenses\">\r\n            <ExpensesFilter selected={filteredYear} onFilterChange={FilterChangeHandler}/>\r\n            <ExpenseChart expenses={filteredExpenses} />\r\n            <ExpensesList items={filteredExpenses} />\r\n        </Card>\r\n    );\r\n}\r\n\r\nexport default Expenses;","import { useState } from \"react\";\r\nimport \"./ExpenseForm.css\"\r\n\r\nfunction ExpenseForm(props) {\r\n\r\n    const [Title, setTitle] = useState('');\r\n    const [Amount, setAmount] = useState('');\r\n    const [Date, setDate] = useState('');\r\n\r\n    const TitleChangeHandler = (event) => {\r\n        setTitle(event.target.value);\r\n    }\r\n    const AmountChangeHandler = (event) => {\r\n        setAmount(event.target.value);\r\n    }\r\n    const DateChangeHandler = (event) => {\r\n        setDate(event.target.value);\r\n    }\r\n\r\n    function submitHandler(event){\r\n        event.preventDefault();\r\n        const expenseData = {\r\n            title: Title,\r\n            amount: +Amount,\r\n            date: new window.Date(Date)\r\n        };\r\n\r\n        props.onSubmitExpenseData(expenseData);\r\n        setTitle('');\r\n        setAmount('');\r\n        setDate('');\r\n    }\r\n\r\n    return(\r\n        <form onSubmit={submitHandler}>\r\n            <div className=\"new-expense__controls\">\r\n                <div className=\"new-expense__control\">\r\n                    <label>Title</label>\r\n                    <input type=\"text\" value={Title} onChange={TitleChangeHandler}/>\r\n                </div>\r\n                <div className=\"new-expense__control\">\r\n                    <label>Amount</label>\r\n                    <input type=\"number\" min=\"0.01\" step=\"0.01\" value={Amount} onChange={AmountChangeHandler}/>\r\n                </div>\r\n                <div className=\"new-expense__control\">\r\n                    <label>Date</label>\r\n                    <input type=\"date\" min=\"2019-01-01\" max=\"2022-10-31\" value={Date} onChange={DateChangeHandler} />\r\n                </div>\r\n            </div>\r\n            <div className=\"new-expense__actions\">\r\n                <button type=\"button\" onClick={props.onCancel}>Cancel</button>\r\n                <button type=\"submit\">Add Expense</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default ExpenseForm;","import \"./NewExpense.css\";\r\nimport ExpenseForm from \"./ExpenseForm\";\r\nimport { useState } from \"react\";\r\n\r\nfunction  NewExpense(props) {\r\n\r\n    const [isEditing, setEditing] = useState(false);\r\n    function submitDataHandler(enteredExpenseData){\r\n        const ExpenseData = {\r\n            ...enteredExpenseData,\r\n            id: Math.floor(Math.random()*10000).toString()\r\n        };\r\n        props.onAddExpense(ExpenseData);\r\n    }\r\n\r\n    function clickHandler(){\r\n        setEditing(true);\r\n    }\r\n    function stopEditingHandler(){\r\n        setEditing(false);\r\n    }\r\n    return <div className=\"new-expense\">\r\n    {!isEditing && <button onClick={clickHandler}> Add Expense</button>}\r\n    {isEditing && <ExpenseForm onSubmitExpenseData={submitDataHandler} onCancel={stopEditingHandler}/>}\r\n    </div>\r\n}\r\n\r\nexport default NewExpense;","import logo from './logo.svg';\nimport './App.css';\nimport TableTitle from './components/Expenses/TableHeader';\nimport Expenses from './components/Expenses/Expenses';\nimport NewExpense from './components/NewExpense/NewExpense';\nimport { useState } from 'react';\n\nconst existingExpenses = [\n  {\n    id: 'e1',\n    title: 'Toilet Paper',\n    amount: 94.12,\n    date: new Date(2020, 7, 14),\n  },\n  { \n    id: 'e2',\n    title: 'New TV',\n    amount: 799.49,\n    date: new Date(2021, 2, 12) \n  },\n  {\n    id: 'e3',\n    title: 'Car Insurance',\n    amount: 294.67,\n    date: new Date(2021, 2, 28),\n  },\n  {\n    id: 'e4',\n    title: 'New Desk (Wooden)',\n    amount: 450,\n    date: new Date(2021, 5, 12),\n  }\n];\n\nfunction App() {\n  \n  const [expenses,setExpenses] = useState(existingExpenses);\n\n  function addExpensehandler(newExpenseData){\n    setExpenses(prevExpenses =>{\n      return [newExpenseData, ...prevExpenses];\n    });\n  }\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <TableTitle />\n      </header>\n      <Expenses items={expenses} />\n      <div className=\"App-body\">\n        <NewExpense onAddExpense={addExpensehandler}/>\n          {/* <p>\n            Edit <code>src/App.js</code> and save to reload.\n          </p>\n          <a\n            className=\"App-link\"\n            href=\"https://reactjs.org\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            Learn React\n          </a> */}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}